{"version":3,"file":"index.js","sources":["../node_modules/@stdlib/error-tools-fmtprodmsg/lib/main.js","../node_modules/@stdlib/utils-define-property/lib/define_property.js","../node_modules/@stdlib/utils-define-property/lib/builtin.js","../node_modules/@stdlib/string-base-format-interpolate/lib/is_number.js","../node_modules/@stdlib/string-base-format-interpolate/lib/zero_pad.js","../node_modules/@stdlib/string-base-format-interpolate/lib/format_integer.js","../node_modules/@stdlib/string-base-format-interpolate/lib/format_double.js","../node_modules/@stdlib/string-base-format-interpolate/lib/space_pad.js","../node_modules/@stdlib/string-base-format-interpolate/lib/main.js","../node_modules/@stdlib/string-base-format-interpolate/lib/is_string.js","../node_modules/@stdlib/string-base-format-tokenize/lib/main.js","../node_modules/@stdlib/string-format/lib/main.js","../node_modules/@stdlib/string-format/lib/is_string.js","../node_modules/@stdlib/utils-define-property/lib/polyfill.js","../node_modules/@stdlib/utils-define-property/lib/index.js","../node_modules/@stdlib/utils-define-property/lib/has_define_property_support.js","../node_modules/@stdlib/utils-define-nonenumerable-read-only-property/lib/main.js","../node_modules/@stdlib/assert-has-own-property/lib/main.js","../node_modules/@stdlib/utils-define-nonenumerable-read-only-accessor/lib/main.js","../node_modules/@stdlib/symbol-ctor/lib/main.js","../node_modules/@stdlib/symbol-iterator/lib/main.js","../node_modules/@stdlib/assert-has-iterator-symbol-support/lib/main.js","../lib/node.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Formats an error message for production.\n*\n* @param {string} code - error code\n* @param {*} ...args - error message arguments\n* @returns {string} formatted error message\n*\n* @example\n* var msg = fmtprodmsg( '3', 'wrong_type' );\n* // returns 'https://stdlib.io/e/3?&arg[]=wrong_type'\n*/\nfunction fmtprodmsg() {\n\tvar a = arguments;\n\tvar c = a[ 0 ];\n\tvar u = 'https://stdlib.io/e/'+c+'?';\n\tvar i;\n\tfor ( i = 1; i < a.length; i++ ) {\n\t\tu += '&arg[]=' + encodeURIComponent( a[ i ] );\n\t}\n\treturn u;\n}\n\n\n// EXPORTS //\n\nexport default fmtprodmsg;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default zeroPad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js';\nimport zeroPad from './zero_pad.js';\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js';\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( token ) {\n\tvar digits;\n\tvar out;\n\tvar f = parseFloat( token.arg );\n\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( token.arg ) ) {\n\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t}\n\t\t// Case: NaN, Infinity, or -Infinity\n\t\tf = token.arg;\n\t}\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e');\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatDouble;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default spacePad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport formatInteger from './format_integer.js';\nimport isString from './is_string.js';\nimport formatDouble from './format_double.js';\nimport spacePad from './space_pad.js';\nimport zeroPad from './zero_pad.js';\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isnan = isNaN; // NOTE: We use the global `isNaN` function here instead of `@stdlib/math/base/assert/is-nan` to avoid circular dependencies.\nvar isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n\n\n// FUNCTIONS //\n\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/\nfunction initialize( token ) {\n\tvar out = {};\n\tout.specifier = token.specifier;\n\tout.precision = ( token.precision === void 0 ) ? 1 : token.precision;\n\tout.width = token.width;\n\tout.flags = token.flags || '';\n\tout.mapping = token.mapping;\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/\nfunction formatInterpolate( tokens ) {\n\tvar hasPeriod;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar i;\n\tvar j;\n\n\tif ( !isArray( tokens ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );\n\t}\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\thasPeriod = token.precision !== void 0;\n\t\t\ttoken = initialize( token );\n\t\t\tif ( !token.specifier ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );\n\t\t\t}\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasPeriod ) {\n\t\t\t\tif ( token.precision === '*' ) {\n\t\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\t\thasPeriod = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( hasPeriod ) ? token.precision : -1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ?\n\t\t\t\t\t\tString( token.arg ) :\n\t\t\t\t\t\tfromCharCode( num );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nexport default formatTokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport interpolate from '@stdlib/string-base-format-interpolate';\nimport tokenize from '@stdlib/string-base-format-tokenize';\nimport isString from './is_string.js';\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\targs = [ tokenize( str ) ];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nexport default format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string-format';\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils-define-property\n*\n* @example\n* import defineProperty from '@stdlib/utils-define-property';\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nimport hasDefinePropertySupport from './has_define_property_support.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './define_property.js';\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nexport default hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnlyAccessor( obj, prop, getter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar Sym = ( typeof Symbol === 'function' ) ? Symbol : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Sym;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasIteratorSymbolSupport from '@stdlib/assert-has-iterator-symbol-support';\n\n\n// MAIN //\n\n/**\n* Iterator symbol.\n*\n* @name IteratorSymbol\n* @constant\n* @type {(symbol|null)}\n*\n* @example\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/\nvar IteratorSymbol = ( hasIteratorSymbolSupport() ) ? Symbol.iterator : null;\n\n\n// EXPORTS //\n\nexport default IteratorSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport Symbol from '@stdlib/symbol-ctor';\n\n\n// MAIN //\n\n/**\n* Tests for native `Symbol.iterator` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol.iterator` support\n*\n* @example\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasIteratorSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol' &&\n\t\thasOwnProp( Symbol, 'iterator' ) &&\n\t\ttypeof Symbol.iterator === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default hasIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property';\n\n\n// MAIN //\n\n/**\n* List node constructor.\n*\n* @private\n* @constructor\n* @param {*} value - node value\n* @returns {Node} Node instance\n*\n* @example\n* var node = new Node( 'foo' );\n* // returns <Node>\n*/\nfunction Node( value ) { // eslint-disable-line stdlib/no-redeclare\n\t// Why a getter? Because some of the list APIs will return the list \"node\", not the value. In which case, the node API is no longer private and we have to guard against users mucking about (deleting, updating, etc) with property values (in particular, the `next` property).\n\tdefineProperty( this, 'next', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() { // eslint-disable-line no-restricted-syntax\n\t\t\treturn this._next;\n\t\t}\n\t});\n\tthis.value = value;\n\n\tdefineProperty( this, '_next', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': null\n\t});\n\n\t// NOTE: strictly speaking, we should not be keeping back-references in a singly-linked list; however, doing so allows us to more efficiently add, remove, and insert list values.\n\tdefineProperty( this, '_prev', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': null\n\t});\n\n\treturn this;\n}\n\n\n// EXPORTS //\n\nexport default Node;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\n\nimport setReadOnlyAccessor from '@stdlib/utils-define-nonenumerable-read-only-accessor';\nimport iteratorSymbol from '@stdlib/symbol-iterator';\nimport Node from './node.js'; // eslint-disable-line stdlib/no-redeclare\n\n// MAIN //\n\n/**\n* Linked list constructor.\n*\n* @constructor\n* @returns {LinkedList} linked list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the first value:\n* v = list.shift();\n* // returns 'foo'\n*/\nfunction LinkedList() {\n\tif ( !(this instanceof LinkedList) ) {\n\t\treturn new LinkedList();\n\t}\n\tthis._length = 0;\n\tthis._first = null;\n\tthis._last = null;\n\treturn this;\n}\n\n/**\n* Clears the list.\n*\n* @name clear\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the first value:\n* var v = list.first().value;\n* // returns 'foo'\n*\n* // Examine the list length:\n* var len = list.length;\n* // returns 2\n*\n* // Clear all list items:\n* list.clear();\n*\n* // Peek at the first value:\n* v = list.first();\n* // returns undefined\n*\n* // Examine the list length:\n* len = list.length;\n* // returns 0\n*/\nsetReadOnly( LinkedList.prototype, 'clear', function clear() {\n\tthis._length = 0;\n\tthis._first = null;\n\tthis._last = null;\n\treturn this;\n});\n\n/**\n* Returns the first list node.\n*\n* @name first\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(Node|void)} list node\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the first value:\n* var v = list.first().value;\n* // returns 'foo'\n*/\nsetReadOnly( LinkedList.prototype, 'first', function first() {\n\tif ( this._length ) {\n\t\treturn this._first;\n\t}\n});\n\n/**\n* Inserts a value into the list **after** a provided list node.\n*\n* @name insert\n* @memberof LinkedList.prototype\n* @type {Function}\n* @param {Node} node - node after which to insert the value\n* @param {*} value - value to insert\n* @throws {Error} must provide a node belonging to the list\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' ).push( 'beep' );\n*\n* // Determine the list length:\n* var len = list.length;\n* // returns 3\n*\n* // Get the second node:\n* var node = list.first().next;\n*\n* // Insert a value after the second node:\n* list.insert( node, 'boop' );\n*\n* // Determine the list length:\n* len = list.length;\n* // returns 4\n*/\nsetReadOnly( LinkedList.prototype, 'insert', function insert( node, value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar n;\n\n\t// Case: last node (equivalent to `push()`)\n\tif ( node === this._last ) {\n\t\treturn this.push( value );\n\t}\n\t// Unfortunately, we need to check whether we have been provided a node belonging to our list by walking the list. If we don't, we could erroneously increment the list length. This means our runtime goes from the theoretical O(1) to O(N).\n\tn = this._first;\n\twhile ( n !== this._last && n !== node ) {\n\t\tn = n._next;\n\t}\n\t// Check if we iterated through the entire list:\n\tif ( n === this._last ) {\n\t\tthrow new Error( format('1VB1e') );\n\t}\n\t// Create a new list node:\n\tn = new Node( value );\n\n\t// Update pointers:\n\tnode._next._prev = n;\n\tn._next = node._next;\n\n\tnode._next = n;\n\tn._prev = node;\n\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Returns an iterator for iterating over a list.\n*\n* ## Notes\n*\n* -   In order to prevent confusion arising from list mutation during iteration, a returned iterator **always** iterates over a list \"snapshot\", which is defined as the list of elements at the time of this method's invocation.\n*\n* @name iterator\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {Iterator} iterator\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Create an iterator:\n* var it = list.iterator();\n*\n* // Iterate over the list...\n* var v = it.next().value;\n* // returns 'foo'\n*\n* v = it.next().value;\n* // returns 'bar'\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( LinkedList.prototype, 'iterator', function iterator() {\n\tvar values;\n\tvar iter;\n\tvar self;\n\tvar FLG;\n\tvar i;\n\n\tself = this;\n\n\t// Initialize the iteration index:\n\ti = -1;\n\n\t// Create a copy of list values (necessary in order to \"snapshot\" the list; otherwise, values could come and go between calls to `next`):\n\tvalues = this.toArray();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= values.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': values[ i ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.iterator();\n\t}\n});\n\n/**\n* Returns the last node.\n*\n* @name last\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(Node|void)} list node\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the last value:\n* var v = list.last().value;\n* // returns 'bar'\n*/\nsetReadOnly( LinkedList.prototype, 'last', function last() {\n\tif ( this._length ) {\n\t\treturn this._last;\n\t}\n});\n\n/**\n* List length.\n*\n* @name length\n* @memberof LinkedList.prototype\n* @type {NonNegativeInteger}\n*\n* @example\n* var list = new LinkedList();\n*\n* // Examine the initial list length:\n* var len = list.length;\n* // returns 0\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Retrieve the current list length:\n* len = list.length;\n* // returns 2\n*/\nsetReadOnlyAccessor( LinkedList.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Removes a value from the end of the list.\n*\n* @name pop\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'beep'\n*/\nsetReadOnly( LinkedList.prototype, 'pop', function pop() {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tif ( this._length ) {\n\t\t// Retrieve the last value:\n\t\tvalue = this._last.value;\n\n\t\t// Check whether we have a new \"tail\" or whether we have emptied the list...\n\t\tif ( this._last._prev ) {\n\t\t\tthis._last = this._last._prev;\n\t\t\tthis._last._next = null;\n\t\t} else {\n\t\t\t// List is empty:\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t}\n\t\t// Decrement the list length:\n\t\tthis._length -= 1;\n\t}\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Adds a value to the end of the list.\n*\n* @name push\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'beep'\n*/\nsetReadOnly( LinkedList.prototype, 'push', function push( value ) {\n\tvar node;\n\n\t// Create a new list node:\n\tnode = new Node( value );\n\n\t// Check whether the list is currently empty...\n\tif ( this._length === 0 ) {\n\t\t// This is the only list node, making it both the first and last node:\n\t\tthis._first = node;\n\t\tthis._last = node;\n\t} else {\n\t\t// Link the new node to the previous last node:\n\t\tnode._prev = this._last; // eslint-disable-line no-underscore-dangle\n\n\t\t// Link the previous last node to the new node:\n\t\tthis._last._next = node; // eslint-disable-line no-underscore-dangle\n\n\t\t// Update the pointer for the last node:\n\t\tthis._last = node;\n\t}\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n});\n\n/**\n* Removes a list node from the list.\n*\n* @name remove\n* @memberof LinkedList.prototype\n* @type {Function}\n* @param {Node} node - node to remove\n* @throws {Error} must provide a node belonging to the list\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' ).push( 'beep' );\n*\n* // Determine the list length:\n* var len = list.length;\n* // returns 3\n*\n* // Get the second node:\n* var node = list.first().next;\n*\n* // Remove the second node:\n* var v = list.remove( node );\n* // returns 'bar'\n*\n* // Determine the list length:\n* len = list.length;\n* // returns 2\n*/\nsetReadOnly( LinkedList.prototype, 'remove', function remove( node ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tvar n;\n\n\t// Case: first node (equivalent to `shift()`)\n\tif ( node === this._first ) {\n\t\treturn this.shift();\n\t}\n\t// Case: last node (equivalent to `pop()`)\n\tif ( node === this._last ) {\n\t\treturn this.pop();\n\t}\n\t// Retrieve the node value:\n\tvalue = node.value;\n\n\t// Unfortunately, we need to check whether we have been provided a node belonging to our list by walking the list. If we don't, we could erroneously decrement the list length. This means our runtime goes from the theoretical O(1) to O(N).\n\tn = this._first;\n\twhile ( n !== this._last && n !== node ) {\n\t\tn = n._next;\n\t}\n\t// Check if we iterated through the entire list:\n\tif ( n === this._last ) {\n\t\tthrow new Error( format('1VB1e') );\n\t}\n\t// Update pointers:\n\tnode._prev._next = node._next;\n\tnode._next._prev = node._prev;\n\n\t// Decrement the list length:\n\tthis._length -= 1;\n\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Removes a value from the beginning of the list.\n*\n* @name shift\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the first value:\n* var v = list.shift();\n* // returns 'foo'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the first value:\n* v = list.shift();\n* // returns 'bar'\n*/\nsetReadOnly( LinkedList.prototype, 'shift', function shift() {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tif ( this._length ) {\n\t\t// Retrieve the first value:\n\t\tvalue = this._first.value;\n\n\t\t// Check whether we have a new \"head\" or whether we have emptied the list...\n\t\tif ( this._first._next ) {\n\t\t\tthis._first = this._first._next;\n\t\t\tthis._first._prev = null;\n\t\t} else {\n\t\t\t// List is empty:\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t}\n\t\t// Decrement the list length:\n\t\tthis._length -= 1;\n\t}\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Returns an array of list values.\n*\n* @name toArray\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {Array} list values\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Get an array of list values:\n* var vals = list.toArray();\n* // returns [ 'foo', 'bar' ]\n*/\nsetReadOnly( LinkedList.prototype, 'toArray', function toArray() {\n\tvar node;\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tnode = this._first;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( node.value );\n\t\tnode = node.next;\n\t}\n\treturn out;\n});\n\n/**\n* Serializes a list as JSON.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `LinkedList` instance.\n*\n* @name toJSON\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {Object} serialized list\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Serialize to JSON:\n* var o = list.toJSON();\n* // returns { 'type': 'linked-list', 'data': [ 'foo', 'bar' ] }\n*/\nsetReadOnly( LinkedList.prototype, 'toJSON', function toJSON() {\n\tvar out = {};\n\tout.type = 'linked-list';\n\tout.data = this.toArray();\n\treturn out;\n});\n\n/**\n* Adds a value to the beginning of the list.\n*\n* @name unshift\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the beginning of the list:\n* list.unshift( 'foo' ).unshift( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'foo'\n*\n* // Add a new value to the beginning of the list:\n* list.unshift( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'bar'\n*/\nsetReadOnly( LinkedList.prototype, 'unshift', function unshift( value ) {\n\tvar node;\n\n\t// Create a new list node:\n\tnode = new Node( value );\n\n\t// Check whether the list is currently empty...\n\tif ( this._length === 0 ) {\n\t\t// This is the only list node, making it both the first and last node:\n\t\tthis._first = node;\n\t\tthis._last = node;\n\t} else {\n\t\t// Link the new node to the previous first node:\n\t\tnode._next = this._first; // eslint-disable-line no-underscore-dangle\n\n\t\t// Link the previous first node to the new node:\n\t\tthis._first._prev = node; // eslint-disable-line no-underscore-dangle\n\n\t\t// Update the pointer for the first node:\n\t\tthis._first = node;\n\t}\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n});\n\n// EXPORTS //\n\nexport default LinkedList;\n"],"names":["fmtprodmsg","i","a","arguments","u","length","encodeURIComponent","main","Object","defineProperty","isNumber","value","zeros","n","out","zeroPad","str","width","right","negative","pad","startsWithMinus","substr","lowercase","String","prototype","toLowerCase","uppercase","toUpperCase","formatInteger","token","base","specifier","arg","parseInt","isFinite","Error","toString","precision","padRight","sign","alternate","call","charAt","abs","Math","replace","RE_EXP_POS_DIGITS","RE_EXP_NEG_DIGITS","RE_ONLY_DIGITS","RE_DIGITS_BEFORE_EXP","RE_TRAILING_PERIOD_ZERO","RE_PERIOD_ZERO_EXP","RE_ZERO_BEFORE_EXP","formatDouble","digits","f","parseFloat","toExponential","toFixed","toPrecision","spaces","fromCharCode","isnan","isNaN","isArray","Array","initialize","flags","mapping","formatInterpolate","tokens","hasPeriod","flag","num","pos","j","TypeError","padZeros","indexOf","maxWidth","substring","RE","parse","match","formatTokenize","content","prev","exec","slice","lastIndex","push","format","args","tokenize","interpolate","apply","objectProtoype","toStr","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","err","hasDefinePropertySupport","builtin","obj","prop","descriptor","hasValue","hasGet","hasSet","__proto__","get","set","defineProperty$1","setNonEnumerableReadOnly","configurable","enumerable","writable","property","has","hasOwnProperty","Sym","Symbol","IteratorSymbol","iterator","Node","this","_next","LinkedList","_length","_first","_last","setReadOnly","node","_prev","values","iter","self","FLG","toArray","done","iteratorSymbol","shift","pop","next","data"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]}